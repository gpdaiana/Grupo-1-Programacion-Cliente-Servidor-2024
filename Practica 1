/*Parte 1
1.	Facturación de productos: Imagina que estás creando un sistema para una tienda que vende dos tipos de productos: físicos y digitales. Ambos tipos de productos tienen un nombre y un precio, pero la forma de calcular el impuesto es diferente para cada uno. Para los productos físicos, el impuesto es un porcentaje fijo del precio. Para los productos digitales, el impuesto es un porcentaje menor. Crea una clase abstracta Producto con métodos para obtener el nombre, el precio y calcular el impuesto. Luego, crea las clases ProductoFisico y ProductoDigital que extiendan Producto e implementen el método para calcular el impuesto de la manera apropiada.
2.	Sistema de notificaciones: Estás desarrollando un sistema que necesita enviar notificaciones a los usuarios. Las notificaciones pueden ser enviadas por correo electrónico, SMS o notificaciones push. Cada método de notificación tiene su propia forma de enviar un mensaje. Crea una interfaz Notificador con un método enviarMensaje. Luego, crea las clases NotificadorEmail, NotificadorSMS y NotificadorPush, que implementen la interfaz Notificador.
3.	Sistema de pago: Tienes una tienda online que acepta varios métodos de pago: tarjeta de crédito, PayPal y transferencia bancaria. Cada método de pago tiene su propia lógica para realizar el pago. Crea una interfaz MetodoPago con un método realizarPago. Luego, crea las clases PagoTarjetaCredito, PagoPaypal y PagoTransferenciaBancaria que implementen la interfaz MetodoPago.

Parte 2
1.	Facturación de productos mejorada: Además de lo anterior, ahora cada producto físico tiene una tasa de envío asociada, la cual depende del peso del producto. Por otro lado, los productos digitales tienen una tarifa por licencia, que varía dependiendo del tipo de licencia (personal, empresarial, educativa). Crea una interfaz Tasable con un método calcularTasa. Agrega esta interfaz a las clases ProductoFisico y ProductoDigital e implementa el método calcularTasa de acuerdo con las reglas mencionadas. Finalmente, en el main, crea una lista de productos, calcula el total de impuestos y tasas y muestra el resultado.
2.	Sistema de notificaciones avanzado: Ahora, cada usuario puede tener preferencias sobre cómo recibir notificaciones: algunos pueden preferir correo electrónico, otros SMS y otras notificaciones push. Además, cada usuario puede tener diferentes direcciones de correo electrónico, números de teléfono o identificadores de push. Crea una clase Usuario que tenga una lista de objetos Notificador y métodos para agregar y eliminar notificadores. También agrega un método enviarNotificacion que recorra la lista de notificadores y envíe el mensaje. En el main, crea algunos usuarios, establece sus preferencias de notificación y envía mensajes.
3.	Sistema de pago avanzado: En lugar de un único método de pago, ahora los clientes pueden tener múltiples métodos de pago asociados a su cuenta. Cada método de pago tiene un límite de crédito y un método para verificar si una transacción puede ser realizada. Actualiza la interfaz MetodoPago con un método verificarTransaccion. Crea una clase Cliente que tenga una lista de métodos de pago y un método realizarCompra, que intente realizar la transacción con cada método de pago hasta que uno tenga éxito o todos fallen. En el main, crea algunos clientes, agrega algunos métodos de pago a cada uno, realiza algunas compras y muestra los resultados.
*/
